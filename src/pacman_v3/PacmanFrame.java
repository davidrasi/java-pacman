

package pacman_v3;

import data.*;
import java.awt.event.KeyEvent;
/**
 * Clase principal del programa Comecocos donde se controla el inicio del juego,
 * así como los demás estados: parado, creación de nueva partida...
 * @author davidramirezsierra
 */
public class PacmanFrame extends javax.swing.JFrame implements Runnable {


    private Laberinto rejilla;
    private Figura figura;
    private Mueve mueve;
    private boolean ini = true;
    private boolean ini2 = true;
    private boolean cronometroActivo = false;
    Integer minutos = 0 , segundos = 0, milesimas = 0;
    
    


    /**
     * Constructor en el cual se inicializan los componentes de la interfaz gráfica,
     * además se crea el laberinto, se llama al constructor de mueve (que inicia
     * una hebra) y se reanuda el juego
     */
    public PacmanFrame() {
        
        initComponents();
        rejilla = new Laberinto(28, 31);
        mueve=new Mueve(this, 1);
        nuevaFigura();
        mueve.reanudar();
        salir_boton.setEnabled(false);


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        ventana_dialogo = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        puntuacion_label = new javax.swing.JLabel();
        parar_boton = new javax.swing.JButton();
        salir_boton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        aviso = new javax.swing.JLabel();
        rejillaPanel1 = new LaberintoPanel(this);
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        jScrollPane1.setViewportView(jEditorPane1);

        ventana_dialogo.setBounds(new java.awt.Rectangle(4, 22, 300, 200));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Sobre el juego:");

        jLabel2.setText("Juego creado por David Ramírez Sierra para la ");

        jLabel4.setText("asignatura Complementos de Programación");

        jLabel5.setText("correspondiente a la Práctica 8.");

        javax.swing.GroupLayout ventana_dialogoLayout = new javax.swing.GroupLayout(ventana_dialogo.getContentPane());
        ventana_dialogo.getContentPane().setLayout(ventana_dialogoLayout);
        ventana_dialogoLayout.setHorizontalGroup(
            ventana_dialogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ventana_dialogoLayout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(ventana_dialogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        ventana_dialogoLayout.setVerticalGroup(
            ventana_dialogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ventana_dialogoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                salir(evt);
            }
        });

        jPanel1.setBackground(java.awt.Color.lightGray);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PACMAN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N

        puntuacion_label.setFont(new java.awt.Font("Lucida Grande", 1, 20));
        puntuacion_label.setForeground(new java.awt.Color(0, 51, 255));
        puntuacion_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        puntuacion_label.setText("---------");
        puntuacion_label.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Puntuación", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 15))); // NOI18N

        parar_boton.setText("COMENZAR");
        parar_boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parar_botonActionPerformed(evt);
            }
        });

        salir_boton.setText("<html><center>JUEGO NUEVO");
        salir_boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salir_botonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18));
        jLabel3.setForeground(new java.awt.Color(0, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("---------");
        jLabel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tiempo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 15))); // NOI18N

        aviso.setFont(new java.awt.Font("Lucida Grande", 1, 14));
        aviso.setForeground(new java.awt.Color(255, 0, 0));
        aviso.setText("PARADO!!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(parar_boton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(salir_boton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(aviso, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(puntuacion_label, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(parar_boton, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                        .addComponent(aviso))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                        .addComponent(puntuacion_label, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(salir_boton, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        rejillaPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        rejillaPanel1.setPreferredSize(new java.awt.Dimension(600, 600));

        javax.swing.GroupLayout rejillaPanel1Layout = new javax.swing.GroupLayout(rejillaPanel1);
        rejillaPanel1.setLayout(rejillaPanel1Layout);
        rejillaPanel1Layout.setHorizontalGroup(
            rejillaPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 596, Short.MAX_VALUE)
        );
        rejillaPanel1Layout.setVerticalGroup(
            rejillaPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 596, Short.MAX_VALUE)
        );

        jMenu1.setText("Acerca del juego...");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ayuda");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(rejillaPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rejillaPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void parar_botonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parar_botonActionPerformed
        // TODO add your handling code here:

        if (mueve.getParado() || ini == true) {

            if (ini == true) 
            {
                iniciarCronometro();
                salir_boton.setEnabled(true);

            }
            salir_boton.setEnabled(true);
            
            cronometroActivo = true;
            iniciarCronometro();
            rejillaPanel1.requestFocus();
            aviso.setText("");
            mueve.reanudar();
            parar_boton.setText("PARAR");
            ini = false;
            

            
        } else {

            
            cronometroActivo = false;            
            mueve.suspender();
            aviso.setText("PARADO!!");
            parar_boton.setText("REANUDAR");
            salir_boton.setEnabled(false);

        }
         
    }//GEN-LAST:event_parar_botonActionPerformed

    private void salir_botonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salir_botonActionPerformed
        // TODO add your handling code here:
        
        rejillaPanel1.requestFocus();      
        //minutos = 0 ; segundos = 0; milesimas = 0;
        inicializaJuego();
        mueve.reanudar();
        mueve.inicializaScore();
        setPuntuacion(0);
       

    }//GEN-LAST:event_salir_botonActionPerformed

    private void salir(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salir
        // TODO add your handling code here:
         if(evt.getKeyCode() == KeyEvent.VK_SPACE)
            System.exit(0);
    }//GEN-LAST:event_salir

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:

        System.out.println("Sobre el juego...");
        ventana_dialogo.setVisible(true);

    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:

         System.out.println("AYUDA");
         
    }//GEN-LAST:event_jMenu2MouseClicked


    /**
     * Visualiza la puntuación del juego
     * @param score
     */
    public void setPuntuacion(int score){

        if (score == 3100) {
                       
            inicializaJuego();
            mueve.inicializaScore();
            
        }

        String puntuacion = Integer.toString(score);
        puntuacion_label.setText(puntuacion);

    }




     /** * Obtiene una referencia al Laberinto del juego
     * @return una referencia al Laberinto del juego */
    public Laberinto getRejilla() {
        return rejilla;
    }

    /**
     * Obtiene una referencia al comecocos que se mueve actualmente en el juego
     * @return una referencia a la Figura actual
     */
    public Figura getFigura() {

        return figura;
    }


    /**
     * Se crea una nueva figura
     */
    public void nuevaFigura() {
        figura = Figura.nuevaFigura();
        System.out.println("Se crea el comecocos");

    }


    /**
     * Deja en su situación de inicio todas las celdas de la Laberinto,
     * . Ademas genera una nueva Figura
     */
    public void inicializaJuego() {
        rejilla.initRejilla();
        nuevaFigura();
        figura.setDireccion(figura.ARRIBA);
        minutos = 0 ; segundos = 0; milesimas = 0;
    }

    /** * Obtiene una referencia al panel donde se dibujan los elementos del juego
     * @return una referencia al panel del juego
     */
    public LaberintoPanel getPanel() {
        return rejillaPanel1;
    }



    /**
     * Hebra pirncipal
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PacmanFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aviso;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton parar_boton;
    private javax.swing.JLabel puntuacion_label;
    private pacman_v3.LaberintoPanel rejillaPanel1;
    private javax.swing.JButton salir_boton;
    private javax.swing.JDialog ventana_dialogo;
    // End of variables declaration//GEN-END:variables



/////////// CRONOMETRO ///////

    /*
     * Metodo sobreescrito run de la tarea Cronometro, el cual contabiliza el tiempo
     * desde que se inicia la partida
     */

    public void run(){
        //minutos = 0 ; segundos = 0; milesimas = 0;
        //min es minutos, seg es segundos y mil es milesimas de segundo
        String min="", seg="", mil="";
        try
        {
            //Mientras cronometroActivo sea verdadero entonces seguira
            //aumentando el tiempo
            while( cronometroActivo )
            {
                Thread.sleep( 100 );
                //Incrementamos 4 milesimas de segundo
                milesimas += 100;

                //Cuando llega a 1000 osea 1 segundo aumenta 1 segundo
                //y las milesimas de segundo de nuevo a 0
                if( milesimas == 1000 )
                {
                    milesimas = 0;
                    segundos += 1;
                    //Si los segundos llegan a 60 entonces aumenta 1 los minutos
                    //y los segundos vuelven a 0
                    if( segundos == 60 )
                    {
                        segundos = 0;
                        minutos++;
                    }
                }

                //Esto solamente es estetica para que siempre este en formato
                //00:00:000
                if( minutos < 10 ) min = "0" + minutos;
                else min = minutos.toString();
                if( segundos < 10 ) seg = "0" + segundos;
                else seg = segundos.toString();

                if( milesimas < 10 ) mil = "00" + milesimas;
                else if( milesimas < 100 ) mil = "0" + milesimas;
                else mil = milesimas.toString();

                //Colocamos en la etiqueta la informacion
                jLabel3.setText( min + ":" + seg + ":" + mil );
            }

        }catch(Exception e){}
    }


    /**Iniciar el cronometro poniendo cronometroActivo
    //en verdadero para que entre en el while*/
    public void iniciarCronometro() {

        cronometroActivo = true;
        hilo = new Thread(this);
        hilo.start();
        
    }

     /**Esto es para parar el cronometro*/
    public void pararCronometro(){
        cronometroActivo = false;
    }


    
     Thread hilo;







   
}
